
name: build_release
# Step 1: Choose the branch or branches you want to run this workflow
on:
  pull_request:
    branches:
      - main
      - master


jobs:
  testing:
    name: Lint Check and Testing and generating release apk

    runs-on: ubuntu-latest

    steps:
      - name: Clone Repo
        uses: actions/checkout@v1

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: list all gradle tasks
        run: ./gradlew tasks

      # Step 3: Check the code with Android linter
      - name: Run Android Linter
        run: ./gradlew lintDebug

      # Step 4: Yun your unit tests
      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest

      # Step 5: Get keystore
      - name: Get keystore file from a base64 string
        run: echo $KEYSTORE_BASE64 | base64 --decode > keystore.jks && ls

      # Step 6: Assemble release apk
      - name: Assemble Release APK
        run: ./gradlew assembleRelease

      - name: Upload APK
        uses: actions/upload-artifact@v1
        with:
          name: apk
          path: app/release/app-release.apk

  releasing:
    name: Building Release APK
    needs: testing
    runs-on: ubuntu-latest

    steps:
      - name: Download APK from build
        uses: actions/download-artifact@v1
        with:
          name: apk

      - id: bump
        uses: zwaldowski/match-label-action@v1
        with:
          allowed: major,minor,patch
      - id: next_version
        uses: zwaldowski/semver-release-action@v1
        with:
          bump: ${{ steps.bump.outputs.match }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{steps.next_version.outputs.version}}
          release_name: Release ${{ steps.next_version.outputs.version }}

      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: apk/app-release.apk
          asset_name: ProtectMyChild.apk
          asset_content_type: application/zip
